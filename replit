import os
import threading
from tkinter import *
from langchain_google_genai import ChatGoogleGenerativeAI
import requests

# Set the Google API key
os.environ['GOOGLE_API_KEY'] = 'AIzaSyA7lgFVJCMuPk6V5xm-jxMHh8ndOpo69pY'

# Initialize ChatGoogleGenerativeAI with the API key
model = ChatGoogleGenerativeAI(model="gemini-pro",
                               google_api_key=os.environ.get('GOOGLE_API_KEY'))


def get_response(message):
  """
    Get response from the chatbot model.

    Args:
        message (str): Input message from the user.

    Returns:
        str: Response generated by the chatbot model.
    """
  try:
    output = model.invoke(message)
  except Exception as e:
    output = "Error: " + str(e)
  return output


def send_message():
    """
    Send message from the user and get the response from the chatbot model.
    """
    message = message_box.get()
    message_box.delete(0, END)
    text_widget.insert(END, "You: " + message + "\n")
  
    try:
      # Send message to Flask app
      response = requests.post('http://localhost:8080/submit',
                               data={
                                   'user_input': message
                               }).text
    except requests.exceptions.RequestException as e:
      response = "Error: Could not connect to the server."
  
    # Display response
    text_widget.insert(END, "Bot: " + response + "\n")
    text_widget.see(END)


window = Tk()
window.title("Chatbot")

text_widget = Text(window, height=20, width=50)
text_widget.pack()

scroll_bar = Scrollbar(window)
scroll_bar.pack(side=RIGHT, fill=Y)

text_widget.config(yscrollcommand=scroll_bar.set)
scroll_bar.config(command=text_widget.yview)

message_box = Entry(window, bd=3)
message_box.pack(side=BOTTOM, fill=X)

send_button = Button(window, text="Send", command=send_message)
send_button.pack(side=BOTTOM)

window.mainloop()
